"use strict";exports.id=4813,exports.ids=[4813],exports.modules={24813:(t,e,i)=>{i.d(e,{q:()=>p});let s="object"==typeof performance&&performance&&"function"==typeof performance.now?performance:Date,h=new Set,r="object"==typeof process&&process?process:{},a=(t,e,i,s)=>{"function"==typeof r.emitWarning?r.emitWarning(t,e,i,s):console.error(`[${i}] ${e}: ${t}`)},o=globalThis.AbortController,l=globalThis.AbortSignal;if(void 0===o){l=class{onabort;_onabort=[];reason;aborted=!1;addEventListener(t,e){this._onabort.push(e)}},o=class{constructor(){e()}signal=new l;abort(t){if(!this.signal.aborted){for(let e of(this.signal.reason=t,this.signal.aborted=!0,this.signal._onabort))e(t);this.signal.onabort?.(t)}}};let t=r.env?.LRU_CACHE_IGNORE_AC_WARNING!=="1",e=()=>{t&&(t=!1,a("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.","NO_ABORT_CONTROLLER","ENOTSUP",e))}}let n=t=>!h.has(t);Symbol("type");let d=t=>t&&t===Math.floor(t)&&t>0&&isFinite(t),c=t=>d(t)?t<=256?Uint8Array:t<=65536?Uint16Array:t<=0x100000000?Uint32Array:t<=Number.MAX_SAFE_INTEGER?u:null:null;class u extends Array{constructor(t){super(t),this.fill(0)}}class f{heap;length;static #t=!1;static create(t){let e=c(t);if(!e)return[];f.#t=!0;let i=new f(t,e);return f.#t=!1,i}constructor(t,e){if(!f.#t)throw TypeError("instantiate Stack using Stack.create(n)");this.heap=new e(t),this.length=0}push(t){this.heap[this.length++]=t}pop(){return this.heap[--this.length]}}class p{#e;#i;#s;#h;#r;#a;#o;ttl;ttlResolution;ttlAutopurge;updateAgeOnGet;updateAgeOnHas;allowStale;noDisposeOnSet;noUpdateTTL;maxEntrySize;sizeCalculation;noDeleteOnFetchRejection;noDeleteOnStaleGet;allowStaleOnFetchAbort;allowStaleOnFetchRejection;ignoreFetchAbort;#l;#n;#d;#c;#u;#f;#p;#g;#v;#m;#S;#y;#z;#L;#x;#_;#k;#F;static unsafeExposeInternals(t){return{starts:t.#z,ttls:t.#L,sizes:t.#y,keyMap:t.#d,keyList:t.#c,valList:t.#u,next:t.#f,prev:t.#p,get head(){return t.#g},get tail(){return t.#v},free:t.#m,isBackgroundFetch:e=>t.#T(e),backgroundFetch:(e,i,s,h)=>t.#A(e,i,s,h),moveToTail:e=>t.#b(e),indexes:e=>t.#w(e),rindexes:e=>t.#E(e),isStale:e=>t.#O(e)}}get max(){return this.#e}get maxSize(){return this.#i}get calculatedSize(){return this.#n}get size(){return this.#l}get fetchMethod(){return this.#a}get memoMethod(){return this.#o}get dispose(){return this.#s}get onInsert(){return this.#h}get disposeAfter(){return this.#r}constructor(t){let{max:e=0,ttl:i,ttlResolution:s=1,ttlAutopurge:r,updateAgeOnGet:o,updateAgeOnHas:l,allowStale:u,dispose:g,onInsert:v,disposeAfter:m,noDisposeOnSet:S,noUpdateTTL:y,maxSize:z=0,maxEntrySize:L=0,sizeCalculation:x,fetchMethod:_,memoMethod:k,noDeleteOnFetchRejection:F,noDeleteOnStaleGet:T,allowStaleOnFetchRejection:A,allowStaleOnFetchAbort:b,ignoreFetchAbort:w}=t;if(0!==e&&!d(e))throw TypeError("max option must be a nonnegative integer");let E=e?c(e):Array;if(!E)throw Error("invalid max value: "+e);if(this.#e=e,this.#i=z,this.maxEntrySize=L||this.#i,this.sizeCalculation=x,this.sizeCalculation){if(!this.#i&&!this.maxEntrySize)throw TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");if("function"!=typeof this.sizeCalculation)throw TypeError("sizeCalculation set to non-function")}if(void 0!==k&&"function"!=typeof k)throw TypeError("memoMethod must be a function if defined");if(this.#o=k,void 0!==_&&"function"!=typeof _)throw TypeError("fetchMethod must be a function if specified");if(this.#a=_,this.#_=!!_,this.#d=new Map,this.#c=Array(e).fill(void 0),this.#u=Array(e).fill(void 0),this.#f=new E(e),this.#p=new E(e),this.#g=0,this.#v=0,this.#m=f.create(e),this.#l=0,this.#n=0,"function"==typeof g&&(this.#s=g),"function"==typeof v&&(this.#h=v),"function"==typeof m?(this.#r=m,this.#S=[]):(this.#r=void 0,this.#S=void 0),this.#x=!!this.#s,this.#F=!!this.#h,this.#k=!!this.#r,this.noDisposeOnSet=!!S,this.noUpdateTTL=!!y,this.noDeleteOnFetchRejection=!!F,this.allowStaleOnFetchRejection=!!A,this.allowStaleOnFetchAbort=!!b,this.ignoreFetchAbort=!!w,0!==this.maxEntrySize){if(0!==this.#i&&!d(this.#i))throw TypeError("maxSize must be a positive integer if specified");if(!d(this.maxEntrySize))throw TypeError("maxEntrySize must be a positive integer if specified");this.#M()}if(this.allowStale=!!u,this.noDeleteOnStaleGet=!!T,this.updateAgeOnGet=!!o,this.updateAgeOnHas=!!l,this.ttlResolution=d(s)||0===s?s:1,this.ttlAutopurge=!!r,this.ttl=i||0,this.ttl){if(!d(this.ttl))throw TypeError("ttl must be a positive integer if specified");this.#D()}if(0===this.#e&&0===this.ttl&&0===this.#i)throw TypeError("At least one of max, maxSize, or ttl is required");if(!this.ttlAutopurge&&!this.#e&&!this.#i){let t="LRU_CACHE_UNBOUNDED";n(t)&&(h.add(t),a("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.","UnboundedCacheWarning",t,p))}}getRemainingTTL(t){return this.#d.has(t)?1/0:0}#D(){let t=new u(this.#e),e=new u(this.#e);this.#L=t,this.#z=e,this.#I=(i,h,r=s.now())=>{if(e[i]=0!==h?r:0,t[i]=h,0!==h&&this.ttlAutopurge){let t=setTimeout(()=>{this.#O(i)&&this.#C(this.#c[i],"expire")},h+1);t.unref&&t.unref()}},this.#W=i=>{e[i]=0!==t[i]?s.now():0},this.#R=(s,r)=>{if(t[r]){let a=t[r],o=e[r];if(!a||!o)return;s.ttl=a,s.start=o,s.now=i||h();let l=s.now-o;s.remainingTTL=a-l}};let i=0,h=()=>{let t=s.now();if(this.ttlResolution>0){i=t;let e=setTimeout(()=>i=0,this.ttlResolution);e.unref&&e.unref()}return t};this.getRemainingTTL=s=>{let r=this.#d.get(s);if(void 0===r)return 0;let a=t[r],o=e[r];return a&&o?a-((i||h())-o):1/0},this.#O=s=>{let r=e[s],a=t[s];return!!a&&!!r&&(i||h())-r>a}}#W=()=>{};#R=()=>{};#I=()=>{};#O=()=>!1;#M(){let t=new u(this.#e);this.#n=0,this.#y=t,this.#B=e=>{this.#n-=t[e],t[e]=0},this.#U=(t,e,i,s)=>{if(this.#T(e))return 0;if(!d(i)){if(s){if("function"!=typeof s)throw TypeError("sizeCalculation must be a function");if(!d(i=s(e,t)))throw TypeError("sizeCalculation return invalid (expect positive integer)")}else throw TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.")}return i},this.#G=(e,i,s)=>{if(t[e]=i,this.#i){let i=this.#i-t[e];for(;this.#n>i;)this.#N(!0)}this.#n+=t[e],s&&(s.entrySize=i,s.totalCalculatedSize=this.#n)}}#B=t=>{};#G=(t,e,i)=>{};#U=(t,e,i,s)=>{if(i||s)throw TypeError("cannot set size without setting maxSize or maxEntrySize on cache");return 0};*#w({allowStale:t=this.allowStale}={}){if(this.#l)for(let e=this.#v;this.#j(e)&&((t||!this.#O(e))&&(yield e),e!==this.#g);){e=this.#p[e]}}*#E({allowStale:t=this.allowStale}={}){if(this.#l)for(let e=this.#g;this.#j(e)&&((t||!this.#O(e))&&(yield e),e!==this.#v);){e=this.#f[e]}}#j(t){return void 0!==t&&this.#d.get(this.#c[t])===t}*entries(){for(let t of this.#w())void 0===this.#u[t]||void 0===this.#c[t]||this.#T(this.#u[t])||(yield[this.#c[t],this.#u[t]])}*rentries(){for(let t of this.#E())void 0===this.#u[t]||void 0===this.#c[t]||this.#T(this.#u[t])||(yield[this.#c[t],this.#u[t]])}*keys(){for(let t of this.#w()){let e=this.#c[t];void 0===e||this.#T(this.#u[t])||(yield e)}}*rkeys(){for(let t of this.#E()){let e=this.#c[t];void 0===e||this.#T(this.#u[t])||(yield e)}}*values(){for(let t of this.#w())void 0===this.#u[t]||this.#T(this.#u[t])||(yield this.#u[t])}*rvalues(){for(let t of this.#E())void 0===this.#u[t]||this.#T(this.#u[t])||(yield this.#u[t])}[Symbol.iterator](){return this.entries()}[Symbol.toStringTag]="LRUCache";find(t,e={}){for(let i of this.#w()){let s=this.#u[i],h=this.#T(s)?s.__staleWhileFetching:s;if(void 0!==h&&t(h,this.#c[i],this))return this.get(this.#c[i],e)}}forEach(t,e=this){for(let i of this.#w()){let s=this.#u[i],h=this.#T(s)?s.__staleWhileFetching:s;void 0!==h&&t.call(e,h,this.#c[i],this)}}rforEach(t,e=this){for(let i of this.#E()){let s=this.#u[i],h=this.#T(s)?s.__staleWhileFetching:s;void 0!==h&&t.call(e,h,this.#c[i],this)}}purgeStale(){let t=!1;for(let e of this.#E({allowStale:!0}))this.#O(e)&&(this.#C(this.#c[e],"expire"),t=!0);return t}info(t){let e=this.#d.get(t);if(void 0===e)return;let i=this.#u[e],h=this.#T(i)?i.__staleWhileFetching:i;if(void 0===h)return;let r={value:h};if(this.#L&&this.#z){let t=this.#L[e],i=this.#z[e];t&&i&&(r.ttl=t-(s.now()-i),r.start=Date.now())}return this.#y&&(r.size=this.#y[e]),r}dump(){let t=[];for(let e of this.#w({allowStale:!0})){let i=this.#c[e],h=this.#u[e],r=this.#T(h)?h.__staleWhileFetching:h;if(void 0===r||void 0===i)continue;let a={value:r};if(this.#L&&this.#z){a.ttl=this.#L[e];let t=s.now()-this.#z[e];a.start=Math.floor(Date.now()-t)}this.#y&&(a.size=this.#y[e]),t.unshift([i,a])}return t}load(t){for(let[e,i]of(this.clear(),t)){if(i.start){let t=Date.now()-i.start;i.start=s.now()-t}this.set(e,i.value,i)}}set(t,e,i={}){if(void 0===e)return this.delete(t),this;let{ttl:s=this.ttl,start:h,noDisposeOnSet:r=this.noDisposeOnSet,sizeCalculation:a=this.sizeCalculation,status:o}=i,{noUpdateTTL:l=this.noUpdateTTL}=i,n=this.#U(t,e,i.size||0,a);if(this.maxEntrySize&&n>this.maxEntrySize)return o&&(o.set="miss",o.maxEntrySizeExceeded=!0),this.#C(t,"set"),this;let d=0===this.#l?void 0:this.#d.get(t);if(void 0===d)d=0===this.#l?this.#v:0!==this.#m.length?this.#m.pop():this.#l===this.#e?this.#N(!1):this.#l,this.#c[d]=t,this.#u[d]=e,this.#d.set(t,d),this.#f[this.#v]=d,this.#p[d]=this.#v,this.#v=d,this.#l++,this.#G(d,n,o),o&&(o.set="add"),l=!1,this.#F&&this.#h?.(e,t,"add");else{this.#b(d);let i=this.#u[d];if(e!==i){if(this.#_&&this.#T(i)){i.__abortController.abort(Error("replaced"));let{__staleWhileFetching:e}=i;void 0!==e&&!r&&(this.#x&&this.#s?.(e,t,"set"),this.#k&&this.#S?.push([e,t,"set"]))}else!r&&(this.#x&&this.#s?.(i,t,"set"),this.#k&&this.#S?.push([i,t,"set"]));if(this.#B(d),this.#G(d,n,o),this.#u[d]=e,o){o.set="replace";let t=i&&this.#T(i)?i.__staleWhileFetching:i;void 0!==t&&(o.oldValue=t)}}else o&&(o.set="update");this.#F&&this.onInsert?.(e,t,e===i?"update":"replace")}if(0===s||this.#L||this.#D(),this.#L&&(l||this.#I(d,s,h),o&&this.#R(o,d)),!r&&this.#k&&this.#S){let t;let e=this.#S;for(;t=e?.shift();)this.#r?.(...t)}return this}pop(){try{for(;this.#l;){let t=this.#u[this.#g];if(this.#N(!0),this.#T(t)){if(t.__staleWhileFetching)return t.__staleWhileFetching}else if(void 0!==t)return t}}finally{if(this.#k&&this.#S){let t;let e=this.#S;for(;t=e?.shift();)this.#r?.(...t)}}}#N(t){let e=this.#g,i=this.#c[e],s=this.#u[e];return this.#_&&this.#T(s)?s.__abortController.abort(Error("evicted")):(this.#x||this.#k)&&(this.#x&&this.#s?.(s,i,"evict"),this.#k&&this.#S?.push([s,i,"evict"])),this.#B(e),t&&(this.#c[e]=void 0,this.#u[e]=void 0,this.#m.push(e)),1===this.#l?(this.#g=this.#v=0,this.#m.length=0):this.#g=this.#f[e],this.#d.delete(i),this.#l--,e}has(t,e={}){let{updateAgeOnHas:i=this.updateAgeOnHas,status:s}=e,h=this.#d.get(t);if(void 0!==h){let t=this.#u[h];if(this.#T(t)&&void 0===t.__staleWhileFetching)return!1;if(!this.#O(h))return i&&this.#W(h),s&&(s.has="hit",this.#R(s,h)),!0;s&&(s.has="stale",this.#R(s,h))}else s&&(s.has="miss");return!1}peek(t,e={}){let{allowStale:i=this.allowStale}=e,s=this.#d.get(t);if(void 0===s||!i&&this.#O(s))return;let h=this.#u[s];return this.#T(h)?h.__staleWhileFetching:h}#A(t,e,i,s){let h=void 0===e?void 0:this.#u[e];if(this.#T(h))return h;let r=new o,{signal:a}=i;a?.addEventListener("abort",()=>r.abort(a.reason),{signal:r.signal});let l={signal:r.signal,options:i,context:s},n=(s,h=!1)=>{let{aborted:a}=r.signal,o=i.ignoreFetchAbort&&void 0!==s;return(i.status&&(a&&!h?(i.status.fetchAborted=!0,i.status.fetchError=r.signal.reason,o&&(i.status.fetchAbortIgnored=!0)):i.status.fetchResolved=!0),!a||o||h)?(this.#u[e]===c&&(void 0===s?c.__staleWhileFetching?this.#u[e]=c.__staleWhileFetching:this.#C(t,"fetch"):(i.status&&(i.status.fetchUpdated=!0),this.set(t,s,l.options))),s):d(r.signal.reason)},d=s=>{let{aborted:h}=r.signal,a=h&&i.allowStaleOnFetchAbort,o=a||i.allowStaleOnFetchRejection,l=o||i.noDeleteOnFetchRejection;if(this.#u[e]!==c||(l&&void 0!==c.__staleWhileFetching?a||(this.#u[e]=c.__staleWhileFetching):this.#C(t,"fetch")),o)return i.status&&void 0!==c.__staleWhileFetching&&(i.status.returnedStale=!0),c.__staleWhileFetching;if(c.__returned===c)throw s};i.status&&(i.status.fetchDispatched=!0);let c=new Promise((e,s)=>{let a=this.#a?.(t,h,l);a&&a instanceof Promise&&a.then(t=>e(void 0===t?void 0:t),s),r.signal.addEventListener("abort",()=>{(!i.ignoreFetchAbort||i.allowStaleOnFetchAbort)&&(e(void 0),i.allowStaleOnFetchAbort&&(e=t=>n(t,!0)))})}).then(n,t=>(i.status&&(i.status.fetchRejected=!0,i.status.fetchError=t),d(t))),u=Object.assign(c,{__abortController:r,__staleWhileFetching:h,__returned:void 0});return void 0===e?(this.set(t,u,{...l.options,status:void 0}),e=this.#d.get(t)):this.#u[e]=u,u}#T(t){return!!this.#_&&!!t&&t instanceof Promise&&t.hasOwnProperty("__staleWhileFetching")&&t.__abortController instanceof o}async fetch(t,e={}){let{allowStale:i=this.allowStale,updateAgeOnGet:s=this.updateAgeOnGet,noDeleteOnStaleGet:h=this.noDeleteOnStaleGet,ttl:r=this.ttl,noDisposeOnSet:a=this.noDisposeOnSet,size:o=0,sizeCalculation:l=this.sizeCalculation,noUpdateTTL:n=this.noUpdateTTL,noDeleteOnFetchRejection:d=this.noDeleteOnFetchRejection,allowStaleOnFetchRejection:c=this.allowStaleOnFetchRejection,ignoreFetchAbort:u=this.ignoreFetchAbort,allowStaleOnFetchAbort:f=this.allowStaleOnFetchAbort,context:p,forceRefresh:g=!1,status:v,signal:m}=e;if(!this.#_)return v&&(v.fetch="get"),this.get(t,{allowStale:i,updateAgeOnGet:s,noDeleteOnStaleGet:h,status:v});let S={allowStale:i,updateAgeOnGet:s,noDeleteOnStaleGet:h,ttl:r,noDisposeOnSet:a,size:o,sizeCalculation:l,noUpdateTTL:n,noDeleteOnFetchRejection:d,allowStaleOnFetchRejection:c,allowStaleOnFetchAbort:f,ignoreFetchAbort:u,status:v,signal:m},y=this.#d.get(t);if(void 0===y){v&&(v.fetch="miss");let e=this.#A(t,y,S,p);return e.__returned=e}{let e=this.#u[y];if(this.#T(e)){let t=i&&void 0!==e.__staleWhileFetching;return v&&(v.fetch="inflight",t&&(v.returnedStale=!0)),t?e.__staleWhileFetching:e.__returned=e}let h=this.#O(y);if(!g&&!h)return v&&(v.fetch="hit"),this.#b(y),s&&this.#W(y),v&&this.#R(v,y),e;let r=this.#A(t,y,S,p),a=void 0!==r.__staleWhileFetching&&i;return v&&(v.fetch=h?"stale":"refresh",a&&h&&(v.returnedStale=!0)),a?r.__staleWhileFetching:r.__returned=r}}async forceFetch(t,e={}){let i=await this.fetch(t,e);if(void 0===i)throw Error("fetch() returned undefined");return i}memo(t,e={}){let i=this.#o;if(!i)throw Error("no memoMethod provided to constructor");let{context:s,forceRefresh:h,...r}=e,a=this.get(t,r);if(!h&&void 0!==a)return a;let o=i(t,a,{options:r,context:s});return this.set(t,o,r),o}get(t,e={}){let{allowStale:i=this.allowStale,updateAgeOnGet:s=this.updateAgeOnGet,noDeleteOnStaleGet:h=this.noDeleteOnStaleGet,status:r}=e,a=this.#d.get(t);if(void 0!==a){let e=this.#u[a],o=this.#T(e);return(r&&this.#R(r,a),this.#O(a))?(r&&(r.get="stale"),o)?(r&&i&&void 0!==e.__staleWhileFetching&&(r.returnedStale=!0),i?e.__staleWhileFetching:void 0):(h||this.#C(t,"expire"),r&&i&&(r.returnedStale=!0),i?e:void 0):(r&&(r.get="hit"),o)?e.__staleWhileFetching:(this.#b(a),s&&this.#W(a),e)}r&&(r.get="miss")}#H(t,e){this.#p[e]=t,this.#f[t]=e}#b(t){t!==this.#v&&(t===this.#g?this.#g=this.#f[t]:this.#H(this.#p[t],this.#f[t]),this.#H(this.#v,t),this.#v=t)}delete(t){return this.#C(t,"delete")}#C(t,e){let i=!1;if(0!==this.#l){let s=this.#d.get(t);if(void 0!==s){if(i=!0,1===this.#l)this.#P(e);else{this.#B(s);let i=this.#u[s];if(this.#T(i)?i.__abortController.abort(Error("deleted")):(this.#x||this.#k)&&(this.#x&&this.#s?.(i,t,e),this.#k&&this.#S?.push([i,t,e])),this.#d.delete(t),this.#c[s]=void 0,this.#u[s]=void 0,s===this.#v)this.#v=this.#p[s];else if(s===this.#g)this.#g=this.#f[s];else{let t=this.#p[s];this.#f[t]=this.#f[s];let e=this.#f[s];this.#p[e]=this.#p[s]}this.#l--,this.#m.push(s)}}}if(this.#k&&this.#S?.length){let t;let e=this.#S;for(;t=e?.shift();)this.#r?.(...t)}return i}clear(){return this.#P("delete")}#P(t){for(let e of this.#E({allowStale:!0})){let i=this.#u[e];if(this.#T(i))i.__abortController.abort(Error("deleted"));else{let s=this.#c[e];this.#x&&this.#s?.(i,s,t),this.#k&&this.#S?.push([i,s,t])}}if(this.#d.clear(),this.#u.fill(void 0),this.#c.fill(void 0),this.#L&&this.#z&&(this.#L.fill(0),this.#z.fill(0)),this.#y&&this.#y.fill(0),this.#g=0,this.#v=0,this.#m.length=0,this.#n=0,this.#l=0,this.#k&&this.#S){let t;let e=this.#S;for(;t=e?.shift();)this.#r?.(...t)}}}}};