"use strict";exports.id=937,exports.ids=[937],exports.modules={7639:(e,r,o)=>{o.d(r,{e:()=>i});var t=o(62569);function i(e){let r=e.getType("_Service");if(!(0,t.YQ)(r))return!1;let o=r.getFields().sdl;if(!o)return!1;let i=o.type;return(0,t.bd)(i)&&(i=i.ofType),!!(0,t.lg)(i)&&"String"==i.name}},23870:(e,r,o)=>{o.d(r,{A:()=>p});var t=o(55511);let i={randomUUID:t.randomUUID},n=new Uint8Array(256),a=n.length,s=[];for(let e=0;e<256;++e)s.push((e+256).toString(16).slice(1));let p=function(e,r,o){if(i.randomUUID&&!r&&!e)return i.randomUUID();let p=(e=e||{}).random??e.rng?.()??(a>n.length-16&&((0,t.randomFillSync)(n),a=0),n.slice(a,a+=16));if(p.length<16)throw Error("Random bytes length must be >= 16");if(p[6]=15&p[6]|64,p[8]=63&p[8]|128,r){if((o=o||0)<0||o+16>r.length)throw RangeError(`UUID byte range ${o}:${o+15} is out of buffer bounds`);for(let e=0;e<16;++e)r[o+e]=p[e];return r}return function(e,r=0){return(s[e[r+0]]+s[e[r+1]]+s[e[r+2]]+s[e[r+3]]+"-"+s[e[r+4]]+s[e[r+5]]+"-"+s[e[r+6]]+s[e[r+7]]+"-"+s[e[r+8]]+s[e[r+9]]+"-"+s[e[r+10]]+s[e[r+11]]+s[e[r+12]]+s[e[r+13]]+s[e[r+14]]+s[e[r+15]]).toLowerCase()}(p)}},27130:(e,r,o)=>{o.d(r,{T:()=>t});let t="5.0.0"},30937:(e,r,o)=>{o.d(r,{ApolloServerPluginSchemaReporting:()=>g});var t=o(21820),i=o(32522),n=o(23870),a=o(74491),s=o(412),p=o(16671),l=o(27130);let h=`#graphql
  mutation SchemaReport($report: SchemaReport!, $coreSchema: String) {
    reportSchema(report: $report, coreSchema: $coreSchema) {
      __typename
      ... on ReportSchemaError {
        message
        code
      }
      ... on ReportSchemaResponse {
        inSeconds
        withCoreSchema
      }
    }
  }
`;class c{schemaReport;coreSchema;endpointUrl;logger;initialReportingDelayInMs;fallbackReportingDelayInMs;fetcher;isStopped;pollTimer;headers;constructor(e){this.headers={"Content-Type":"application/json","x-api-key":e.apiKey,"apollographql-client-name":"ApolloServerPluginSchemaReporting","apollographql-client-version":l.T},this.endpointUrl=e.endpointUrl||"https://schema-reporting.api.apollographql.com/api/graphql",this.schemaReport=e.schemaReport,this.coreSchema=e.coreSchema,this.isStopped=!1,this.logger=e.logger,this.initialReportingDelayInMs=e.initialReportingDelayInMs,this.fallbackReportingDelayInMs=e.fallbackReportingDelayInMs,this.fetcher=e.fetcher??fetch}stopped(){return this.isStopped}start(){this.pollTimer=setTimeout(()=>this.sendOneReportAndScheduleNext(!1),this.initialReportingDelayInMs)}stop(){this.isStopped=!0,this.pollTimer&&(clearTimeout(this.pollTimer),this.pollTimer=void 0)}async sendOneReportAndScheduleNext(e){if(this.pollTimer=void 0,!this.stopped())try{let r=await this.reportSchema(e);if(!r)return;this.stopped()||(this.pollTimer=setTimeout(()=>this.sendOneReportAndScheduleNext(r.withCoreSchema),1e3*r.inSeconds));return}catch(e){this.logger.error(`Error reporting server info to Apollo during schema reporting: ${e}`),this.stopped()||(this.pollTimer=setTimeout(()=>this.sendOneReportAndScheduleNext(!1),this.fallbackReportingDelayInMs))}}async reportSchema(e){let{data:r,errors:o}=await this.apolloQuery({report:this.schemaReport,coreSchema:e?this.coreSchema:null});if(o)throw Error(o.map(e=>e.message).join("\n"));function t(e){return["Unexpected response shape from Apollo when","reporting schema. If this continues, please reach","out to support@apollographql.com.","Received response:",JSON.stringify(e)].join(" ")}if(!r||!r.reportSchema)throw Error(t(r));if("ReportSchemaResponse"===r.reportSchema.__typename)return r.reportSchema;if("ReportSchemaError"===r.reportSchema.__typename)return this.logger.error(["Received input validation error from Apollo:",r.reportSchema.message,"Stopping reporting. Please fix the input errors."].join(" ")),this.stop(),null;throw Error(t(r))}async apolloQuery(e){let r=await this.fetcher(this.endpointUrl,{method:"POST",headers:this.headers,body:JSON.stringify({query:h,variables:e})});if(!r.ok)throw Error(`An unexpected HTTP status code (${r.status}) was encountered during schema reporting.`);try{return await r.json()}catch(e){throw Error(["Couldn't report schema to Apollo.","Parsing response as JSON failed.","If this continues please reach out to support@apollographql.com",e].join(" "))}}}var m=o(7639),d=o(63041);function g({initialDelayMaxMs:e,overrideReportedSchema:r,endpointUrl:o,fetcher:h}=Object.create(null)){let u=(0,n.A)();return(0,i.R)({__internal_plugin_id__:"SchemaReporting",__is_disabled_plugin__:!1,async serverWillStart({apollo:i,schema:n,logger:g}){let S;let{key:f,graphRef:y}=i;if(!f)throw Error("To use ApolloServerPluginSchemaReporting, you must provide an Apollo API key, via the APOLLO_KEY environment variable or via `new ApolloServer({apollo: {key})`");if(!y)throw Error("To use ApolloServerPluginSchemaReporting, you must provide your graph ref (eg, 'my-graph-id@my-graph-variant'). Try setting the APOLLO_GRAPH_REF environment variable or passing `new ApolloServer({apollo: {graphRef}})`.");if(r)try{let e=(0,a.i)((0,s.I)(r,{noLocation:!0}));if(e.length)throw Error(e.map(e=>e.message).join("\n"))}catch(e){throw Error(`The schema provided to overrideReportedSchema failed to parse or validate: ${e.message}`)}if((0,m.e)(n))throw Error("Schema reporting is not yet compatible with Apollo Federation subgraphs. If you're interested in using schema reporting with subgraphs, please contact Apollo support. To set up managed federation, see https://go.apollo.dev/s/managed-federation");void 0!==o&&g.info(`Apollo schema reporting: schema reporting URL override: ${o}`);let R={bootId:u,graphRef:y,platform:process.env.APOLLO_SERVER_PLATFORM||"local",runtimeVersion:`node ${process.version}`,userVersion:process.env.APOLLO_SERVER_USER_VERSION,serverId:process.env.APOLLO_SERVER_ID||process.env.HOSTNAME||t.hostname(),libraryVersion:`@apollo/server@${l.T}`};return{schemaDidLoadOrUpdate({apiSchema:t,coreSupergraphSdl:i}){if(void 0!==r){if(S)return;g.info("Apollo schema reporting: schema to report has been overridden")}let n=r??i??(0,p.rK)(t),a=(0,d.u)(n),s={...R,coreSchemaHash:a};S?.stop(),(S=new c({schemaReport:s,coreSchema:n,apiKey:f,endpointUrl:o,logger:g,initialReportingDelayInMs:Math.floor(Math.random()*(e??1e4)),fallbackReportingDelayInMs:2e4,fetcher:h})).start(),g.info(`Apollo schema reporting: reporting a new schema to Studio! See your graph at https://studio.apollographql.com/graph/${encodeURI(y)}/ with server info ${JSON.stringify(s)}`)},async serverWillStop(){S?.stop()}}}})}}};